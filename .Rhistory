import praw
import pandas as pd # para manipulación de dataframes
from dotenv import load_dotenv # cargar variables de ambiente
import os # cargar variables de ambiente
load_dotenv()
client_id = os.getenv('CLIENT_ID')
client_secret = os.getenv('CLIENT_SECRET')
username = os.getenv('USERNAME')
password = os.getenv('PASSWORD')
user_agent = os.getenv('USER_AGENT')
auth_url = "https://www.reddit.com/api/v1/access_token"
reddit = praw.Reddit(
client_id=client_id,
client_secret=client_secret,
user_agent=user_agent
)
for submission in reddit.subreddit("bikepacking").new(limit = 2):
print(submission.title)
for submission in reddit.subreddit("Rlanguage").new(limit = 2):
print(submission.fullname, submission.title)
posts = []
for submission in reddit.subreddit("Rlanguage").top(limit = None):
data =  [submission.id, submission.title, submission.selftext, submission.score ]
posts.append(data)
df_r = pd.DataFrame(posts, columns=['id', 'title', 'selfttext', "score"])
df_r = pd.read_parquet("data/r_submissions.parquet")
df_r.shape
time_filters = ['day', 'week', 'month', 'year', 'all']
posts = []
subreddit = reddit.subreddit('Rlanguage')
# Para cada ventana de tiempo
for time_filter in time_filters:
# Extraemos los 1.000 primeros mensajes
submissions = subreddit.top(time_filter=time_filter, limit=1000)
for submission in submissions:
data =  [submission.fullname, submission.title, submission.selftext, submission.score ]
posts.append(data)
df_r = pd.DataFrame(posts, columns=['id', 'title', 'selfttext', "score"])
df_r.to_parquet("data/r_submission_big.parquet")
df_r = pd.read_parquet("data/r_submission_big.parquet")
df_r.shape
import numpy as np
len(np.unique(df_r.id))
Sys.getenv("SPOTIFY_CLIENT_ID")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.retina=3,
out.width = "70%",
cache = FALSE,
echo = T,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
options(scipen = 999)
jukebox <-  get_album_tracks("58ufpQsJ1DS5kq4hhzQDiI") # id del álbum
foo_fighters <-  get_artist_audio_features("7jy3rLJdDQY21OgRLCZ9sD", include_groups = "album")
library(spotifyr)
foo_fighters <-  get_artist_audio_features("7jy3rLJdDQY21OgRLCZ9sD", include_groups = "album")
shakira <-  get_artist_audio_features("0EmeFodog0BfCgMzAIvKQp", include_groups = "album")
slayer <-  get_artist_audio_features("1IQ2e1buppatiN1bxUVkrk", include_groups = "album")
library(spotifyr)
foo_fighters <-  get_artist_audio_features("7jy3rLJdDQY21OgRLCZ9sD", include_groups = "album")
shakira <-  get_artist_audio_features("0EmeFodog0BfCgMzAIvKQp", include_groups = "album")
slayer <-  get_artist_audio_features("1IQ2e1buppatiN1bxUVkrk", include_groups = "album")
slayer
shakira
foo_fighters
foo_fighters
slayer
get_artist_audio_features
bandas_chilenas1 <-  get_genre_artists(genre = "rock", market = "CL", limit = 5, offset = 0) # 0 al 4
bandas_chilenas2 <-  get_genre_artists(genre = "rock", market = "CL", limit = 5, offset = 5) # 5 al 9
final <-  get_genre_artists(genre = "rock", market = "CL", limit = 2, offset = 999) # 999 + 2 = 1001
bandas_sample <- read_feather("data/muestra_bandas.feather")
library(feather)
bandas_sample <- read_feather("data/muestra_bandas.feather")
bandas_sample
discografia <- read_csv("data/bandas_mercado_chileno_sample.csv")
